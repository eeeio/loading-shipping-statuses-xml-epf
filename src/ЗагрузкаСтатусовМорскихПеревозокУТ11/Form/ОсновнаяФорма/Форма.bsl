#Область ПрограммныйИнтерфейс

//// Обработчик клиентской назначаемой команды.
////
//// Параметры:
////   ИдентификаторКоманды - Строка - Имя команды, как оно задано в функции СведенияОВнешнейОбработке модуля объекта.
////   ОбъектыНазначения - Массив - Ссылки, для которых выполняется команда.
////
//&НаКлиенте
//Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначения) Экспорт
//	
//	Если ИдентификаторКоманды = "ЗаполнитьВсе" Тогда
//		ЗаполнитьВсеНаСервере(ОбъектыНазначения);
//		ОбновитьСписокОбъектовИЗакрыть();
//	КонецЕсли;
//	
//КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	//Если ТипЗнч(Параметры.ОбъектыНазначения) <> Тип("Массив") Тогда 
	//    // эта ветка для отладки, когда обработка запускается непосредственно из файла
	//	Если ОбъектыНазначения.Количество() = 0 Тогда 
	//		Элементы.ОбъектыНазначения.ТолькоПросмотр = Ложь;
	//	КонецЕсли;  		
		Если НЕ ЗначениеЗаполнено(Параметры.ИдентификаторКоманды) Тогда 
			Параметры.ИдентификаторКоманды = "ЗагрузитьИзФайлаXML";
		КонецЕсли;
	//Иначе	
	//	Для Каждого ЭлементОбъектыНазначения Из Параметры.ОбъектыНазначения Цикл
	//		ОбъектыНазначения.Добавить(ЭлементОбъектыНазначения);
	//	КонецЦикла;
	//КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзФайлаXML(Команда)
	
	ВыбФайл = Новый Файл(ПутьКФайлу);
	Если НЕ ВыбФайл.Существует() Тогда 
		ПоказатьПредупреждение(, "Файл по выбранному пути не найден! Загрузка невозможна.");
		Возврат;
	КонецЕсли;	
	
	ОписаниеФайла 		= Новый ОписаниеПередаваемогоФайла();
	ОписаниеФайла.Имя 	= ПутьКФайлу;
	ПомещаемыеФайлы 	= Новый Массив;
	ПомещаемыеФайлы.Добавить(ОписаниеФайла);
	Оповещение 			= Новый ОписаниеОповещения("ОповещениеПомещениеФайла", ЭтотОбъект, Новый Структура);		
	НачатьПомещениеФайлов(Оповещение, ПомещаемыеФайлы,, Ложь, ЭтаФорма.УникальныйИдентификатор);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДополнительныеПараметры = Новый Структура;
	Оповещение 				= Новый ОписаниеОповещения("ОповещениеПослеВыбораФайлаДляЧтения", ЭтотОбъект, ДополнительныеПараметры);	 
	
	ДиалогОткрытияФайла 					= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПолноеИмяФайла 		= ПутьКФайлу;
	ДиалогОткрытияФайла.Фильтр 				= "xml|*.xml";
	ДиалогОткрытияФайла.МножественныйВыбор 	= Ложь;
	ДиалогОткрытияФайла.Заголовок 			= "Выберите файл статусов морских перевозок";	
	
	ДиалогОткрытияФайла.Показать(Оповещение);	
	
КонецПроцедуры
&НаКлиенте
Процедура ОповещениеПослеВыбораФайлаДляЧтения(ВыбранныеФайлы, ДопПараметры) Экспорт
		
	Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив")	Тогда
		ВыбФайл = Новый Файл(ВыбранныеФайлы[0]);
		Если ВыбФайл.Существует() Тогда 
			ПутьКФайлу = ВыбФайл.ПолноеИмя;
		Иначе
			ПоказатьПредупреждение(, "Файл по выбранному пути не найден!");
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОповещениеПомещениеФайла(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПомещенныеФайлы) = Тип("Массив") Тогда
		//Сообщить("Файл " + ПомещенныеФайлы[0].Имя + " отправлен на сервер"); 
		АдресХранилищаФайла = ПомещенныеФайлы[0].Хранение;
	Иначе
		ПоказатьПредупреждение(, "Не удалось передать файл на сервер для разбора. Попробуйте еще раз.");
		Возврат;
	КонецЕсли; 
	
	СопровождающийТекст = НСтр("ru = 'Загрузка статусов морских перевозок из файла XML'");
		
	ПараметрыКоманды 						= ДополнительныеОтчетыИОбработкиКлиент.ПараметрыВыполненияКомандыВФоне(Параметры.ДополнительнаяОбработкаСсылка);
	//ПараметрыКоманды.ОбъектыНазначения 	= ОбъектыНазначения.ВыгрузитьЗначения();
	ПараметрыКоманды.СопровождающийТекст 	= СопровождающийТекст + "...";     
	
	ПараметрыКоманды.Вставить("АдресХранилищаФайла", АдресХранилищаФайла);
	
	Состояние(ПараметрыКоманды.СопровождающийТекст);
	
	Обработчик = Новый ОписаниеОповещения("ПослеЗавершенияДлительнойОперации", ЭтотОбъект, СопровождающийТекст);
	
	//Если ЗначениеЗаполнено(Параметры.ДополнительнаяОбработкаСсылка) Тогда
	//	ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьКомандуВФоне(Параметры.ИдентификаторКоманды, ПараметрыКоманды, Обработчик);
	//Иначе
		Состояние(ПараметрыКоманды.СопровождающийТекст, , , БиблиотекаКартинок.ДлительнаяОперация48);
		Операция = ВыполнитьКомандуНапрямую(ПараметрыКоманды);
		ВыполнитьОбработкуОповещения(Обработчик, Операция);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьКомандуНапрямую(ПараметрыКоманды)
	
	Операция = Новый Структура("Статус, КраткоеПредставлениеОшибки, ПодробноеПредставлениеОшибки, Сообщения");
	
	Попытка
		ДополнительныеОтчетыИОбработки.ВыполнитьКомандуИзФормыВнешнегоОбъекта(
			Параметры.ИдентификаторКоманды,
			ПараметрыКоманды,
			ЭтотОбъект);
		Операция.Статус = "Выполнено";
	Исключение
		Операция.КраткоеПредставлениеОшибки   = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Операция.ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Операция.Вставить("СообщенияОПроцессе", ПолучитьСообщенияПользователю());
	
	Возврат Операция;
	
КонецФункции

//&НаСервере
//Процедура ЗаполнитьВсеНаСервере(ОбъектыНазначения)
//	
//	РеквизитФормыВЗначение("Объект").ЗаполнитьКонтрагентов(ОбъектыНазначения, Истина, Истина);
//	
//КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияДлительнойОперации(Операция, СопровождающийТекст) Экспорт
	 
	ОбновитьСписокОбъектовИЗакрыть();
	
	Если Операция.Статус = "Выполнено" Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Успешное завершение'"), , СопровождающийТекст, БиблиотекаКартинок.Успешно32);
	Иначе
		Предупреждение = Новый Структура;
		Предупреждение.Вставить("Текст",    Операция.КраткоеПредставлениеОшибки);
		Предупреждение.Вставить("Подробно", Операция.ПодробноеПредставлениеОшибки);
		СтандартныеПодсистемыКлиент.ВывестиПредупреждение(ВладелецФормы, Предупреждение);
	КонецЕсли;
	
	Если Операция.Свойство("СообщенияОПроцессе") И Операция.СообщенияОПроцессе.Количество() > 0 Тогда 
		ОкнаКлиентскогоПриложения = ПолучитьОкна();
		Для каждого ОкноКлиентскогоПриложения Из ОкнаКлиентскогоПриложения Цикл
			Если ОкноКлиентскогоПриложения.Основное Тогда
				ОкноКлиентскогоПриложения.Активизировать();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Для Каждого иСообщение Из Операция.СообщенияОПроцессе Цикл
			иСообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокОбъектовИЗакрыть()
	
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") И Не ВладелецФормы.Модифицированность Тогда
		Попытка
			ВладелецФормы.Прочитать();
		Исключение
			// Значит это форма списка.
		КонецПопытки;
	КонецЕсли;
	
	//ОповеститьОбИзменении(Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
